name: Django Tests

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_USER: test_user
          POSTGRES_DB: test_coopconsum_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client libpq-dev gettext
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage psycopg2-binary
    
    - name: Create simple test settings
      run: |
        cat > coopconsum/settings_test.py << 'EOF'
        import os
        from pathlib import Path
        
        BASE_DIR = Path(__file__).resolve().parent.parent
        
        SECRET_KEY = 'test-secret-key-for-ci-only'
        DEBUG = False
        ALLOWED_HOSTS = ['*']
        
        INSTALLED_APPS = [
            'django.contrib.admin',
            'django.contrib.auth',
            'django.contrib.contenttypes',
            'django.contrib.sessions',
            'django.contrib.messages',
            'django.contrib.staticfiles',
            'rest_framework',
            'corsheaders',
            'socios',
            'productos',
            'pedidos',
            'stock',
            'web',
            'desitjos',
            'eventos',
            'api',
        ]
        
        MIDDLEWARE = [
            'corsheaders.middleware.CorsMiddleware',
            'django.middleware.security.SecurityMiddleware',
            'django.contrib.sessions.middleware.SessionMiddleware',
            'django.middleware.common.CommonMiddleware',
            'django.middleware.csrf.CsrfViewMiddleware',
            'django.contrib.auth.middleware.AuthenticationMiddleware',
            'django.contrib.messages.middleware.MessageMiddleware',
            'django.middleware.clickjacking.XFrameOptionsMiddleware',
        ]
        
        ROOT_URLCONF = 'coopconsum.urls'
        
        TEMPLATES = [
            {
                'BACKEND': 'django.template.backends.django.DjangoTemplates',
                'DIRS': [BASE_DIR / 'templates'],
                'APP_DIRS': True,
                'OPTIONS': {
                    'context_processors': [
                        'django.template.context_processors.debug',
                        'django.template.context_processors.request',
                        'django.contrib.auth.context_processors.auth',
                        'django.contrib.messages.context_processors.messages',
                    ],
                },
            },
        ]
        
        DATABASES = {
            'default': {
                'ENGINE': 'django.db.backends.postgresql',
                'NAME': 'test_coopconsum_db',
                'USER': 'test_user',
                'PASSWORD': 'test_password',
                'HOST': 'localhost',
                'PORT': '5432',
            }
        }
        
        LANGUAGE_CODE = 'ca'
        TIME_ZONE = 'Europe/Madrid'
        USE_I18N = True
        USE_TZ = True
        
        STATIC_URL = '/static/'
        STATIC_ROOT = BASE_DIR / 'static_collected'
        
        MEDIA_URL = '/media/'
        MEDIA_ROOT = BASE_DIR / 'media_test'
        
        PASSWORD_HASHERS = [
            'django.contrib.auth.hashers.MD5PasswordHasher',
        ]
        
        REST_FRAMEWORK = {
            'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
            'PAGE_SIZE': 20,
            'DEFAULT_PERMISSION_CLASSES': [
                'rest_framework.permissions.IsAuthenticatedOrReadOnly',
            ]
        }
        
        CORS_ALLOWED_ORIGINS = [
            "http://localhost:8000",
            "http://127.0.0.1:8000",
        ]
        
        DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
        EOF
    
    - name: Set Django settings module
      run: echo "DJANGO_SETTINGS_MODULE=coopconsum.settings_test" >> $GITHUB_ENV
    
    - name: Run migrations
      run: |
        python manage.py migrate --verbosity=0
    
    - name: Run tests with coverage
      run: |
        coverage run --source='.' manage.py test --verbosity=2
        coverage report -m
        coverage xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
    
    - name: Generate coverage percentage
      run: |
        COVERAGE=$(coverage report --format=total)
        echo "Coverage: $COVERAGE%"
        echo "COVERAGE_PERCENT=$COVERAGE" >> $GITHUB_ENV